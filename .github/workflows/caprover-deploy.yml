name: Build and Deploy Quizard Apps

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.repository_owner }}
  DOCKER_PASSWORD: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB }}  # Use personal access token for GHCR
  CAPROVER_SERVER: ${{ secrets.CAPROVER_SERVER }}
  CAPROVER_API_APP_NAME: ${{ secrets.CAPROVER_API_APP_NAME }}
  CAPROVER_WORKER_APP_NAME: ${{ secrets.CAPROVER_WORKER_APP_NAME }}
  CAPROVER_FRONTEND_APP_NAME: ${{ secrets.CAPROVER_FRONTEND_APP_NAME }}
  CAPROVER_API_APP_TOKEN: ${{ secrets.CAPROVER_API_APP_TOKEN }}
  CAPROVER_WORKER_APP_TOKEN: ${{ secrets.CAPROVER_WORKER_APP_TOKEN }}
  CAPROVER_FRONTEND_APP_TOKEN: ${{ secrets.CAPROVER_FRONTEND_APP_TOKEN }}

jobs:
  # Job for API app
  build-and-deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Preset Image Name for API
        run: echo "IMAGE_API_URL=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/quizard:backend-api-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push API Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_API_URL }}

      - name: Deploy API Image to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ env.CAPROVER_SERVER }}
          app: ${{ env.CAPROVER_API_APP_NAME }}
          token: ${{ env.CAPROVER_API_APP_TOKEN }}
          image: ${{ env.IMAGE_API_URL }}

  # Job for Worker app
  build-and-deploy-worker:
    runs-on: ubuntu-latest
    needs: build-and-deploy-api

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Preset Image Name for Worker
        run: echo "IMAGE_WORKER_URL=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/quizard:backend-worker-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Worker Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_WORKER_URL }}

      - name: Deploy Worker Image to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ env.CAPROVER_SERVER }}
          app: ${{ env.CAPROVER_WORKER_APP_NAME }}
          token: ${{ env.CAPROVER_WORKER_APP_TOKEN }}
          image: ${{ env.IMAGE_WORKER_URL }}

  # Job for Frontend app
  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Frontend
        run: npm run build --verbose
        working-directory: ./frontend

      - name: Preset Image Name for Frontend
        run: echo "IMAGE_FRONTEND_URL=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/quizard:frontend-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend  
          file: ./frontend/Dockerfile  
          push: true
          tags: ${{ env.IMAGE_FRONTEND_URL }}

      - name: Deploy Frontend Image to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ env.CAPROVER_SERVER }}
          app: ${{ env.CAPROVER_FRONTEND_APP_NAME }}
          token: ${{ env.CAPROVER_FRONTEND_APP_TOKEN }}
          image: ${{ env.IMAGE_FRONTEND_URL }}
